plot.ts(kingstsd1)
# Selecting a Candidate ARIMA Model
# plot a correlogram
acf(kingstsd1, lag.max=20)
# get the autocorrelation values
acf(kingstsd1, lag.max=20, plot=FALSE)
# plot a partial correlogram
pacf(kingstsd1, lag.max=20)
# get the partial autocorrelation values
pacf(kingstsd1, lag.max=20, plot=FALSE)
# Automatic model selection
install.packages("forecast")
library("forecast")
auto.arima(kingsts)
install.packages("forecast")
library("forecast")
auto.arima(kingsts)
# Automatic model selection
install.packages("forecast",dependencies = TRUE, repos = "http://cran.us.r-project.org")
library("forecast")
install.packages("forecast",dependencies = TRUE, repos = "http://cran.us.r-project.org")
library("forecast")
auto.arima(kingsts)
install.packages("forecast")
library("forecast")
auto.arima(kingsts)
library("forecast")
auto.arima(kingsts)
library("forecast")
install.packages('forecast')
# Automatic model selection
install.packages("forecast",dependencies = TRUE, repos = "http://cran.us.r-project.org")
install.packages("forecast")
install.packages("forams")
install.packages('forcast')
install.packages('forecast')
data.frame([1,2,3])
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
)
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
)
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
)；
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11",
"2015-03-27")),
stringsAsFactors = FALSE
);
df
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11","2015-03-27")),
stringsAsFactors = FALSE
);
emp.data
emp.data[nrow(emp.data)-2:nrow(emp.data)]
emp.data[nrow(emp.data)-2:nrow(emp.data),]
emp.data[(nrow(emp.data)-2):nrow(emp.data),]
emp.data[nrow(emp.data)-2:,]
emp.data[nrow(emp.data)-2:,]
emp.data[-3:]
emp.data[((nrow(emp.data)-2):nrow(emp.data)]
emp.data[(nrow(emp.data)-2):nrow(emp.data)]
emp.data[-3:]
OA_2 = data.frame()
OA_2 <- data.frame(var1 = c('agree','strongly agree','disagree','agree','strongly disagree','disagree'),var2 = c(1,2,3,NA,8,0))
OA_2
mean(as.numeric(OA_2$var1))
median(as.numeric(as.factor(OA_2$var1)))
median(OA_2$var1)
median(as.numeric(OA_2$var1))
df<- emp.data
df
subset(OA_2, !duplicated(OA_2$var1))
plot_ly(df, x=~emp_name)
plot_ly(df, x = ~emp_name)
add_line(y = ~salary)
add_line(y = ~start_date)
layout(
title= "gragh",
xaxis = list (
rangeslider = list (type = "date")),
yaxis = list (title = "price")
)
plot_ly(df, x = ~emp_name)
install.packages("plotly")
plot_ly(df, x = ~emp_name)
library(plotly)
install.packages("plotly")
install.packages("effects")
devtools::install_github("duckmayr/oldr")
install.packages("devtools")
library(devtools)
quanthub <- data.frame( AA = c(1,2,3,NA),BB = c('quanthub',NA,'test','example'),CC=c(FALSE,TRUE,FALSE,TRUE),DD=c(55,33,22,NA))
quanthub[sample(nrow(quanthub),5,replace = TRUE)]
quanthub
quanthub[sample(nrow(quanthub),5,replace = TRUE),]
data("precip")
pre = data("precip")
pre
type(pre)
typeof(pre)
pre
head(precip)
precip
typeof(precip)
x = data.frame(precip)
x
precip
typeof(precip)
precip[0]
precip[1]
typeof(precip[1])
cars
cars['speed']
speed <- cars['speed']
dist <- cars['dist']
fit <- lm(dist ~speed)
speed <- c(cars['speed'])
dist <- c(cars['dist'])
fit <- lm(dist ~speed)
dist
speed
length(dist)
help(lm)
lm(dist ~ speed)
plot(dist, speed)
dist<-c(2,3,4)
dist
cars['dist']
type(cars.dist)
typeof(cars.dist)
typeof(cars["dist"])
cars <- cars["dist"]
cars
cars <- list(cars)
dist<-cars
speed <- list(cars["speed"])
fit <- lm(dist~speed)
View(speed)
speed
dist
speed <-cars["speed"]
cars
data(cars)
cars
speed<- list(cars['speed'])
speed
fit <- lm (dist~speed)
View(speed)
typeof(speed)
speed
speed <- list(speed)
norm(2.5,1.5)
?norm,
?norm
znorm?
；
？znorm
dnorm(2.5,1.5)
?dnortm
dnorm?
;;
?dnorm
x<- c(11,11,12,16,20,21,10,16,17,13)
median(x)
stderr(x)
?stderr
sd(x)/sqrt(length(x))
qnorm(0.75, mean = 100, sd = 20)
qnorm(0.5, mean = 100, sd = 20)
qbeta(0.5, mean = 100, sd = 20)
qbeta()?
.\
?
/
qbeta?
?
;
qpois(0.5)
qpois(0.5,2)
rnorm(10,0,1)
rnorm(10,0,1)
rnorm(10,0,1)
rnorm(10,0,1,random_state =1)
rnorm()?
;
?rnorm()
\\
lambda = 0.6
x = seq(0.01, 5 0.01)
x = seq(0.01, 5, 0.01)
x
plot(x,dexp(x,rate = lambda),type = '1')
plot(x,dexp(x,rate = lambda),type = 'l')
?rep()
library(mvtnorm)
version
update(R)
update(r)
update.R()
(1-pnorm(1.426))*2
sqrt(0.0079)
(0.1895-0.22)/0.0889*sqrt(20)
pt(-1.534,df = 19)
?pt
pt(-1.534,df = 19,lower.tail = TRUE)
pt(-1.534,df = 19,lower.tail = False)
pt(-1.534,df = 19,lower.tail = FALSE)
pt(-1.534,df = 19,lower.tail = TRUE)*2
pt(2.455,df = 19,lower.tail = FALSE)*2
pt(2.455,df = 19,lower.tail = FALSE)
pt(2.455,df = 25,lower.tail = FALSE)
pnorm(-1.53)*2
pt(-1.53,df=19)*2
(1-pnorm(0.95))*2
pt(1.9,df=42)*2
(1-pt(1.9,df=42))*2
pnorm(1.43)
1-pnorm(1.43)
pchisq(2.787, df = 3)
?pchisq
pt(1.96)
pt(1.96,df = Inf)
mean(c(9.6,9.2,8.7,9.5,9.8,9,9.6))
pt(-1.29,df=6)
pt(-1.29,df=6)*2
pf(53.54,3,6,lower.tail = FALSE)
var(c(9.6,9.2,8.7,9.5,9.8,9,9.6))
pt(-3.36.df = Inf)
pt(-3.36,df = Inf)
pt(-0.4,df = Inf)*2
pchisq(0.372,df=2)
pnorm(-0.606, lower.tail = FALSE)
1- pnorm(1.46)
1- pnorm(1)
pnorm(1)
getwd()
hsb2 = read.csv(file = 'hsb2.csv',header = TRUE, sep = ',')
hsb2
getwd(0)
getwd()
setwd("/Users/yakili/Desktop/19spring")
setwd("/Users/yakili/Desktop/19spring/Data Analytics")
hsb2 = read.csv(file = 'hsb2.csv',header = TRUE, sep = ',')
hsb2
getwd()
setwd("/Users/yakili/Desktop/19spring/Data Analytics/Homework 01")
hsb2 = read.csv(file = 'hsb2.csv',header = TRUE, sep = ',')
hsb2
hsb2 = read.csv(file = 'hsb2.csv',header = TRUE, sep = ',')
hsb2
knitr::opts_chunk$set(echo = TRUE)
hsb2 = read.csv(file = 'hsb2.csv',header = TRUE, sep = ',')
hsb2
meanscore = ave(hsb2$read,hsb2$write,hsb2$math,hsb2$science,hsb2$socst)
hsb2$meanscore = meanscore
View(hsb2)
View(hsb2)
ave(57,52,41,47,57)
meancat[meanscore <45] = 'Low'
hsb2$meanscore[hsb2$meanscore == 99] = NA
hsb2 = within(hsb2,{
meancat = NA
meancat[meanscore <45] = 'Low'
meancat[meanscore >=45 & meanscore <60] = 'Middle'
meancat[meanscore >=60 ] = 'High'
})
View(hsb2)
View(hsb2)
newdata = hsb2[order(hsb2$meanscore,decreasing = TRUE)]
newdata = hsb2[order(hsb2$meanscore,decreasing = TRUE),]
View(newdata)
hsb2$meanscore[hsb2$meanscore == 99] = NA
hsb2 = within(hsb2,{
meancat = NA
meancat[meanscore <45] = 'Low'
meancat[meanscore >45 & meanscore <60] = 'Middle'
meancat[meanscore >60 ] = 'High'
})
newdata = hsb2[order(hsb2$meanscore,decreasing = TRUE),]
View(newdata)
?na.omit
newdata2 = na.omit(newdata)
View(newdata2)
index = c('read','write',"math","science","socst","meanscore","meancat")
newdata3 = newdata2[index]
View(newdata3)
View(hsb2)
View(newdata2)
View(newdata)
View(hsb2)
library(ggplot2)
den = ggplot(hsb2, aes(x=meanscore),grouping(prog)) +
geom_density()
library(ggplot2)
den = ggplot(hsb2, aes(x=meanscore),grouping(prog)) +
geom_density()
den
library(ggplot2)
den = ggplot(hsb2, aes(x=meanscore)) +
geom_density()
den
library(ggplot2)
den = ggplot(hsb2, aes(x=meanscore)) + geom_density() + facet_grid(~prog)
den
ggplot(hsb2, aes(x=meanscore)) + geom_boxplot() + facet_grid(~prog)
ggplot(hsb2, aes(x=prog, y = meanscore)) + geom_boxplot()
ggplot(hsb2, aes(group=prog, y = meanscore)) + geom_boxplot()
ggplot(newdata2, aes(group=prog, y = meanscore)) + geom_boxplot()
newdata2$prog = as.factor(newdata2$prog)
ggplot(newdata2, aes(group=prog, y = meanscore)) + geom_boxplot()
newdata2$prog = as.factor(newdata2$prog)
ggplot(newdata2, aes(x=prog, y = meanscore)) + geom_boxplot()
ggplot(newdata2,axes=(x=meancat)) + geom_bar()
ggplot(newdata2,axes=()) + geom_bar(x= newdata2$meancat)
ggplot(newdata2) + geom_bar(x= newdata2$meancat)
ggplot(newdata2,aes(x=meancat)) + geom_bar(x= newdata2$meancat)
?by()
by(newdata2,INDICES = newdata2$meancat, FUN = sum
#ggplot(newdata2,aes(x=meancat)) + geom_bar(x= newdata2$meancat)
by(newdata2,INDICES = newdata2$meancat, FUN = sum)
by(newdata2,INDICES = as.factor(newdata2$meancat), FUN = sum)
by(newdata2,INDICES = as.factor(newdata2$meancat), FUN = count)
table(newdata2$meancat)
#by(newdata2,INDICES = as.factor(newdata2$meancat), FUN = count)
#ggplot(newdata2,aes(x=meancat)) + geom_bar(x= newdata2$meancat)
airbnb = read.csv(file = 'NOLAlistingsJune2016.csv',header = TRUE, sep = ",")
summary(airbnb)
airbnb = read.csv(file = 'NOLAlistingsJune2016.csv',header = TRUE, sep = ",")
summary(airbnb$price)
ggplot(airbnb,aes(airbnb$price)) + geom_histogram(bins = 10)
ggplot(airbnb,aes(airbnb$price)) + geom_histogram(bins = 100)
ggplot(airbnb,aes(airbnb$price)) + geom_histogram(bins = 100)
ggplot(airbnb,aes(airbnb$price)) + geom_histogram(bins = 1000)
library(GGally)
install.packages('GGally')
library(GGally)
ggpairs(newdata2[,7:12])
View(newdata2)
?ave
hsb2 = read.csv(file = 'hsb2.csv',header = TRUE, sep = ',')
str(hsb2)
meanscore = mean(hsb2$read,hsb2$write,hsb2$math,hsb2$science,hsb2$socst)
hsb2 = read.csv(file = 'hsb2.csv',header = TRUE, sep = ',')
str(hsb2)
meanscore = mean(hsb2$read,hsb2$write,hsb2$math,hsb2$science,hsb2$socst)
meanscore = mean(hsb2[,7:12])
meanscore = mean(hsb2[7:12])
hsb2[7:12]
hsb2[,7:12]
hsb2[:,7:12]
hsb2[,7:12]
meanscore = mean(hsb2[:,6:11])
meanscore = mean(hsb2[,6:11])
meanscore
meanscore = mean (hsb2$read,hsb2$write,hsb2$math,hsb2$science,hsb2$socst)
hsb2 = read.csv(file = 'hsb2.csv',header = TRUE, sep = ',')
str(hsb2)
meanscore = rowMeans(hsb2[,7:11])
hsb2$meanscore = meanscore
hsb2$meanscore[hsb2$meanscore == 99] = NA
hsb2 = within(hsb2,{
meancat = NA
meancat[meanscore <45] = 'Low'
meancat[meanscore >45 & meanscore <60] = 'Middle'
meancat[meanscore >60 ] = 'High'
})
newdata = hsb2[order(hsb2$meanscore,decreasing = TRUE),]
newdata2 = na.omit(newdata)
index = c('read','write',"math","science","socst","meanscore","meancat")
newdata3 = newdata2[index]
library(ggplot2)
den = ggplot(hsb2, aes(x=meanscore)) + geom_density() + facet_grid(~prog)
den
newdata2$prog = as.factor(newdata2$prog)
ggplot(newdata2, aes(x=prog, y = meanscore)) + geom_boxplot()
table(newdata2$meancat)
#by(newdata2,INDICES = as.factor(newdata2$meancat), FUN = count)
#ggplot(newdata2,aes(x=meancat)) + geom_bar(x= newdata2$meancat)
install.packages('GGally')
library(GGally)
ggpairs(newdata2[,7:12])
ggplot(airbnb,aes(airbnb$price)) + geom_histogram(bins = 100)
?subset
priceBelow1K = subset(airbnb,price <1000)
ggplot(priceBelow1K,aes(priceBelow1K$price)) + geom_histogram(bins = 20)
plot(airbnb$longitude,airbnb$latitude)
#plot(airbnb$longitude,airbnb$latitude)
ggplot(airbnb,aes(x=airbnb$longitude,y=airbnb$latitude))+geom_point()
airbnbLocation = subset(airbnb,longitude<=-89.8)
ggplot(airbnbLocation,aes(x=airbnbLocation$longitude,y=airbnbLocation$latitude))+geom_point()
install.packages("ggmap")
library(ggmap)
install.packages("ggmap")
library(ggmap)
qmap(location = "New Orleans")
df <- data.frame(activity = c("Writing", "Making the Margins Really Small", "Making a Cover Page", "Inserting huge quote boxes", "Skimming your research", "Crying Because You're Going to Fail", "Facebook"), minutes = c(30, 15, 20, 30, 60, 120, 720))
df <- data.frame(activity = c("Writing", "Making the Margins Really Small", "Making a Cover Page", "Inserting huge quote boxes", "Skimming your research", "Crying Because You're Going to Fail", "Facebook"), minutes = c(30, 15, 20, 30, 60, 120, 720))
bp <- ggplot(df, aes(x="", y=minutes, fill=activity)) + geom_bar(width = 1, stat = "identity") + ggtitle("Use of time before deadline for important essay") bp pie <- bp + coord_polar("y", start=0) pie
df <- data.frame(activity = c("Writing", "Making the Margins Really Small", "Making a Cover Page", "Inserting huge quote boxes", "Skimming your research", "Crying Because You're Going to Fail", "Facebook"), minutes = c(30, 15, 20, 30, 60, 120, 720))
bp <- ggplot(df, aes(x="", y=minutes, fill=activity)) + geom_bar(width = 1, stat = "identity") + ggtitle("Use of time before deadline for important essay") bp
df <- data.frame(activity = c("Writing", "Making the Margins Really Small", "Making a Cover Page", "Inserting huge quote boxes", "Skimming your research", "Crying Because You're Going to Fail", "Facebook"), minutes = c(30, 15, 20, 30, 60, 120, 720))
bp <- ggplot(df, aes(x="", y=minutes, fill=activity)) + geom_bar(width = 1, stat = "identity") + ggtitle("Use of time before deadline for important essay")
bp
pie <- bp + coord_polar("y", start=0)
pie
?register_google
register_google(key = "AIzaSyB7djX9agZ7v5-BhjZ0rF2FxLzCLzfs9ws" write = TRUE)
register_google(key = "AIzaSyB7djX9agZ7v5-BhjZ0rF2FxLzCLzfs9ws", write = TRUE)
install.packages("ggmap")
library(ggmap)
qmap(location = "New Orleans")
install.packages("ggmap")
library(ggmap)
NOmap = qmap( location = 'new orleans')
install.packages("ggmap")
knitr::opts_chunk$set(echo = TRUE)
library(ggmap)
NOmap = qmap( location = 'new orleans')
register_google(key = "AIzaSyB7djX9agZ7v5-BhjZ0rF2FxLzCLzfs9ws", write = TRUE)
?qmap
qmap(location = 'new orleans')
register_google(key = "AIzaSyB7djX9agZ7v5-BhjZ0rF2FxLzCLzfs9ws", write = TRUE)
bp <- ggplot(df, aes(x="", y=minutes, fill=activity, color= cyl)) + geom_bar(width = 1, stat = "identity") + ggtitle("Use of time before deadline for important essay")
bp <- ggplot(df, aes(x="", y=minutes, fill=activity, color= cyl)) + geom_bar(width = 1, stat = "identity") + ggtitle("Use of time before deadline for important essay")
bp
bp <- ggplot(df, aes(x="", y=minutes, fill=activity, color= activity)) + geom_bar(width = 1, stat = "identity") + ggtitle("Use of time before deadline for important essay")
bp
bp +  scale_fill_brewer(palette="RdGy")
bp +  scale_fill_brewer(palette="BuGn")
bp +  scale_fill_brewer(palette="BuGn")
pie + scale_fill_brewer(palette = "Dark2")
library(ggplot2)
data(diamonds)
attach(diamonds)
head(diamonds)
?ggmap
get_map(location = 'new orleans')
get_map(location = 'new orleans')
no = get_map(location = 'new orleans')
ggmap(no)
?ggmap
ggmap(no,extent = "normal")
ggmap(no,extent = "device")
ggmap(no)
library(ggmap)
NewOrleans= get_map(location = 'new orleans')
ggmap(NewOrleans) + geom_point(aes(x = airbnb$longitude, y = airbnb$latitude))
View(airbnb)
?geom_point
str(NewOrleans)
?geom_point()
ggmap(NewOrleans) + geom_point(x = airbnb$longitude, y = airbnb$latitude)
NewOrleans= get_map(location = 'new orleans')
ggmap(NewOrleans) + geom_point(x = airbnb$longitude, y = airbnb$latitude)
ggmap(NewOrleans) + geom_point(aes(x = longitude, y = latitude), data = airbnb)
ggmap(NewOrleans) + geom_point(aes(x = longitude, y = latitude, color = 'red', size = 'small'), data = airbnb )
+theme(line = element_blank(), text = element_blank(), line = element_blank(), titleelement_blank())
ggmap(NewOrleans) + geom_point(aes(x = longitude, y = latitude, color = 'red', size = 'small'), data = airbnb )+ theme(line = element_blank(), text = element_blank(), line = element_blank(), titleelement_blank())
?geom_point
ggmap(NewOrleans) + geom_point(aes(x = longitude, y = latitude, color = 'red', size = 5), data = airbnb )+ theme(line = element_blank(), text = element_blank(), line = element_blank(),title = element_blank())
ggmap(NewOrleans) + geom_point(aes(x = longitude, y = latitude, color = 'red', size = 5), data = airbnb )+ theme(line = element_blank(), text = element_blank(),title = element_blank())
ggmap(NewOrleans) + geom_point(aes(x = longitude, y = latitude, fill = 'red', size = 0.5), data = airbnb )+ theme(line = element_blank(), text = element_blank(),title = element_blank(), legend = element_blank())
ggmap(NewOrleans) + geom_point(aes(x = longitude, y = latitude, fill = 'red', size = 0.5), data = airbnb )+ theme(line = element_blank(), text = element_blank(),title = element_blank())
ggmap(NewOrleans) + ggplot(airbnb,aes(x= longitude,y = latitude)) + geom_point(color = 'red', size = 0.5) )+ theme(line = element_blank(), text = element_blank(),title = element_blank())
ggmap(NewOrleans) + ggplot(airbnb,aes(x= longitude,y = latitude)) + geom_point(color = 'red', size = 0.5) + theme(line = element_blank(), text = element_blank(),title = element_blank())
?ggplot
ggmap(NewOrleans) + ggplot(airbnb,aes(x= airbnb$longitude,y = airbnb$latitude)) + geom_point(color = 'red', size = 0.5) + theme(line = element_blank(), text = element_blank(),title = element_blank())
fill
ggmap(NewOrleans) + geom_point(aes(x = longitude, y = latitude, fill = 'red', size = 0.5), data = airbnb )+ theme(line = element_blank(), text = element_blank(),title = element_blank())
View(airbnb)
ggmap(NewOrleans) + ggplot(data = airbnb, aes(x= longitude, y = latitude))
ggmap(NewOrleans) + geom_point(data = airbnb, aes(x= longitude, y = latitude))
ggmap(NewOrleans) + geom_point(data = airbnb, aes(x= longitude, y = latitude, size = 0.5))
ggmap(NewOrleans) + geom_point(data = airbnb, aes(x= longitude, y = latitude, size = 0.05))
ggmap(NewOrleans) + geom_point(data = airbnb, aes(x= longitude, y = latitude), size =0.5)
ggmap(NewOrleans) + geom_point(data = airbnb, aes(x= longitude, y = latitude), size =0.5, color = "red")
ggmap(NewOrleans) + geom_point(data = airbnb, aes(x= longitude, y = latitude), size =0.5, color = "red") + theme(line = element_blank(), text = element_blank(),title = element_blank())
?norm
?qnorm
normdist = rnorm(1000,7,1)
hist(normdist)
library(ggplot2)
ggplot(normdist) + geom_histogram()
ggplot(aes(normdist)) + geom_histogram()
hist(normdist)
?hist
hist(normdist)
